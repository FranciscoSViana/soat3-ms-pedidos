apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-pedidos
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      name: mongo-pedidos
      labels:
        app: mongo-pedidos
    spec:
      containers:
        - name: mongo-pedidos-container
          image: mongo
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-pedidos-secret
                  key: mongo-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-pedidos-secret
                  key: mongo-password
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mongo-pedidos-secret
                  key: mongo-database
      volumes:
        - name: init-script
          configMap:
            name: mongodb-configmap
            items:
              - key: mongo-init.js
                path: mongo-init.js
  selector:
    matchLabels:
      app: mongo-pedidos
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-pedidos-service
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
      nodePort: 32003
  selector:
    app: mongo-pedidos
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-configmap
data:
  mongo-init.js: |
    db.createUser({
        user: "Admin",
        pwd: "Agos1918",
        roles: [{ role: "readWrite", db: "admin" }]
    });
