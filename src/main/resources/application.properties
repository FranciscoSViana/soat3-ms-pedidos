spring.application.name=soat3-ms-pedidos
server.port=8083

# Configuracoes do Eureka Client
#eureka.client.service-url.default-zone=http://localhost:8761/eureka/
#eureka.instance.prefer-ip-address=true

 Configuracoes do MongoDB
spring.data.mongodb.host=${MONGODB_HOST:localhost}
spring.data.mongodb.port=${MONGODB_PORT:27017}
spring.data.mongodb.database=${MONGODB_DATABASE:pedidosdb}
spring.data.mongodb.username=${MONGODB_USER:Admin}
spring.data.mongodb.password=${MONGODB_DATABASE:Agos1918}
spring.data.mongodb.uri=${MONGO_URI:mongodb://Admin:Agos1918@localhost:32004/pedidosdb?authSource=admin}

#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=pedidosdb

server.error.include-stacktrace=never

clientes.url=${GATEWAY_CLIENTES:http://localhost:8080/v1/clientes}
produtos.url=${GATEWAY_PRODUTOS:http://localhost:8081/v1/produtos}
pagamentos.url=${GATEWAY_PAGAMENTOS:http://localhost:8082/v1/pagamentos}

# Configurações do Kafka
spring.kafka.consumer.bootstrap-servers=${SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID:pagamentos_grupo_id}
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.techchallenge.soat3mspagamentos.adapter.pagamento.model
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer


# Configurações do MongoDB
#spring.data.mongodb.uri=mongodb://Admin:Agos1918@localhost:27017/pedidosdb?authSource=admin
